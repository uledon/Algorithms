package main;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Scanner;

/**
 * InputReader reads typed text input from the standard text terminal. The text
 * typed by a user is returned as a String.
 * 
 * @author Michael KÃ¶lling and David J. Barnes
 * @author Modified by Dr A J Beaumont
 * @version December 2015
 */
public class InputReader {

	private  LinkedHashMap<String, ArrayList<String>> danceGroups = new LinkedHashMap<>();
	private  LinkedHashMap<String, ArrayList<String>> runningOrder = new LinkedHashMap<>();
	private  LinkedHashMap<String, ArrayList<String>> dances = new LinkedHashMap<>();
	
	public static void main(String[] args) {
		
		dances = readShowFile("DataStructureCoursework/astaireDataFiles/danceShowData_dances.csv");
		danceGroups = readShowFile("DataStructureCoursework/astaireDataFiles/danceShowData_danceGroups.csv");
		runningOrder = readShowFile("DataStructureCoursework/astaireDataFiles/danceShowData_runningOrder.csv");
		
		InputReader tmp5=new InputReader();
		tmp5.showPerformersOfDance("Singing in the Rain");
		tmp5.listAllDancersAlphabetically();
		tmp5.checkTimeBetweenDances("Dance_Programme_Generator/src/Data_Files/danceShowData_runningOrder.csv", 2);
		tmp5.generateRunningOrder(600);

	}
	

	private void showPerformersOfDance(String string) {
		// TODO Auto-generated method stub
		
	}


	private void listAllDancersAlphabetically() {
		// TODO Auto-generated method stub
		
	}


	private void checkTimeBetweenDances(String string, int i) {
		// TODO Auto-generated method stub
		
	}


	private void generateRunningOrder(int i) {
		// TODO Auto-generated method stub
		
	}


	/**
	 * Create a new InputReader that reads text from the text terminal.
	 */
//	public static DanceShow readShowFile(String fileName) {
//		DanceShow danceShow = new DanceShow();
//		BufferedReader reader = null;
//		String list = null;
//		try {
//			reader = new BufferedReader(new FileReader(fileName));
//			list = reader.readLine();
//			list = reader.readLine();
//			reader.lines();
//			while (list != null) {
//				String[] file = list.split("\t");
//				String[] dancers = file[1].split(",");
//				for (int i = 0; i <= 34; i++) {
//
//					list += reader.readLine();
//					list += "\n";
//					list.trim();
//
//				}
//				reader.close();
//				System.out.print(list);
//
//				System.exit(0);
//
//			}
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//
//		return danceShow;
//	}
	
	public static LinkedHashMap<String,ArrayList<String>> readFromFiles(String path) {
	Scanner scanner=null;
	//ArrayList<String> listCategory1=new ArrayList<String>();
	String listCategory1="";
	ArrayList<String> listNames=new ArrayList<String>();
	LinkedHashMap<String,ArrayList<String>> danceGroups=new LinkedHashMap<String,ArrayList<String>>();
	try {
		scanner = new Scanner(new FileReader(path));
	} catch (FileNotFoundException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		System.out.println("The specified file does not exist.");
	}
	
	
	while(scanner.hasNextLine())
	{
		scanner.useDelimiter("\t");
		listCategory1=scanner.next().trim();
		scanner.useDelimiter("\n");
		String[] allNames=scanner.next().trim().split(",");
		for (String currentName:allNames)
		{
			listNames.add(currentName.trim());
		}
		danceGroups.put(listCategory1, listNames);
		listNames=new ArrayList<>();
		
	}
	scanner.close();
    
    /*boolean toggle=false;
    for (String currentWord:list)
    {
    	if ()
    }*/
	/*System.out.println(danceGroups.keySet());
	System.out.println(danceGroups.values());*/
	return danceGroups;

	}
	/**
	 * Create a new InputReader that reads text from a file.
	 * 
	 * @param filename
	 *            The name of the file to read from.
	 */
	// public InputReader(String filename) {
	// try {
	// reader = new Scanner(new File(filename));
	// } catch (FileNotFoundException e) {
	// System.err.println("ERROR: The file called " + filename +
	// " was not found.");
	// System.err.println("Please ensure the file is in the same folder as your
	// BlueJ project OR provide the full path");
	// System.exit(1);
	// }
	// }
	//
	// /**
	// * Read a line of text from standard input (the text terminal),
	// * and return it as a String.
	// *
	// * @return A String typed by the user.
	// */
	// public String getTextInput(String prompt)
	// {
	// System.out.print(prompt); // print prompt
	// String inputLine = reader.nextLine();
	// System.out.println(inputLine);
	// return inputLine;
	// }
	//
	// /**
	// * Read an integer from standard input (the text terminal),
	// * and return it as an int value.
	// *
	// * @return An int value typed by the user.
	// */
	// public int getIntegerInput(String prompt)
	// {
	// System.out.print(prompt); // print prompt
	// int number = reader.nextInt();
	// reader.nextLine();
	// System.out.println(number);
	// return number;
	// }

}
